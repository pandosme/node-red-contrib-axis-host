[
    {
        "id": "74ed6882c1309930",
        "type": "tab",
        "label": "Objects",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "afa65359f250b6fd",
        "type": "Objects",
        "z": "74ed6882c1309930",
        "version": "1",
        "output": "2",
        "classFilter": "-1",
        "confidence": "40",
        "rotation": "0",
        "cog": "1",
        "predictions": "0",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "473649e22757d0da"
            ]
        ]
    },
    {
        "id": "4f4431b726a9d1b8",
        "type": "ui_dropdown",
        "z": "74ed6882c1309930",
        "name": "Rotation",
        "label": "Rotation",
        "tooltip": "",
        "place": "Select rotation",
        "group": "610ebc43f67cfd4b",
        "order": 4,
        "width": "5",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Landscape",
                "value": "Landscape",
                "type": "str"
            },
            {
                "label": "Portrait",
                "value": "Portrait",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "rotation",
        "topicType": "str",
        "className": "",
        "x": 600,
        "y": 360,
        "wires": [
            [
                "90ec7b2798efd4a0"
            ]
        ]
    },
    {
        "id": "90ec7b2798efd4a0",
        "type": "change",
        "z": "74ed6882c1309930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rotation",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b8e54332a8935fdc",
        "type": "ui_dropdown",
        "z": "74ed6882c1309930",
        "name": "Aspect",
        "label": "Camera aspect",
        "tooltip": "",
        "place": "Select resolution",
        "group": "610ebc43f67cfd4b",
        "order": 3,
        "width": "5",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "16:9",
                "value": "16:9",
                "type": "str"
            },
            {
                "label": "4:3",
                "value": "4:3",
                "type": "str"
            },
            {
                "label": "1:1",
                "value": "1:1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "1a9ffc1945c721ad"
            ]
        ]
    },
    {
        "id": "c43934c5eba4a113",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Video player",
        "func": "msg.topic = \"video\";\n\nmsg.payload = {\n    aspect: flow.get(\"aspect\") || \"16:9\",\n    rotation: flow.get(\"rotation\") || \"Landscape\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            [
                "04355ba9e143d9d4"
            ]
        ]
    },
    {
        "id": "1a9ffc1945c721ad",
        "type": "change",
        "z": "74ed6882c1309930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aspect",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ba479528e9ac8b",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Rotation",
        "func": "msg.payload = flow.get(\"rotation\") || \"Landscape\";\nflow.set(\"rotation\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 360,
        "wires": [
            [
                "4f4431b726a9d1b8"
            ]
        ]
    },
    {
        "id": "ee28010f5f1bc6bf",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Aspect",
        "func": "msg.payload = flow.get(\"aspect\") || \"16:9\";\nflow.set(\"aspect\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "b8e54332a8935fdc"
            ]
        ]
    },
    {
        "id": "9d9f1c9d814ef28a",
        "type": "change",
        "z": "74ed6882c1309930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "confidence",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "dcec6ed674d89f67",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Confidence",
        "func": "msg.payload = flow.get(\"confidence\") || 50;\nflow.set(\"confidence\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "dd92f9b9d95e3b4c"
            ]
        ]
    },
    {
        "id": "dd92f9b9d95e3b4c",
        "type": "ui_numeric",
        "z": "74ed6882c1309930",
        "name": "",
        "label": "Confidence",
        "tooltip": "",
        "group": "610ebc43f67cfd4b",
        "order": 2,
        "width": "0",
        "height": "0",
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "9d9f1c9d814ef28a"
            ]
        ]
    },
    {
        "id": "2c6675ce02fbe81f",
        "type": "ui_dropdown",
        "z": "74ed6882c1309930",
        "name": "Class selection",
        "label": "",
        "tooltip": "",
        "place": "Select detection",
        "group": "610ebc43f67cfd4b",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Motorcycle",
                "value": "Motorcycle",
                "type": "str"
            },
            {
                "label": "Other vehicle type",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            },
            {
                "label": "Object",
                "value": "Object",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 280,
        "wires": [
            [
                "b03c6fadd2812341"
            ]
        ]
    },
    {
        "id": "f203815f1cf4e0ba",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Classes",
        "func": "msg.payload = flow.get(\"classes\") || [\"Human\",\"Car\",\"Truck\",\"Bus\",\"Motorcycle\",\"Vehicle\",\"Face\",\"License plate\",\"Object\"]\n\nflow.set(\"classes\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "2c6675ce02fbe81f"
            ]
        ]
    },
    {
        "id": "ba83b5bc139f2d7c",
        "type": "ui_button",
        "z": "74ed6882c1309930",
        "name": "",
        "group": "0d7b022bf27a54b7",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Play",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "json",
        "topic": "video",
        "topicType": "str",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "c43934c5eba4a113"
            ]
        ]
    },
    {
        "id": "473649e22757d0da",
        "type": "function",
        "z": "74ed6882c1309930",
        "name": "Filter",
        "func": "var classFilter = flow.get(\"classes\") || [\"Human\",\"Car\",\"Truck\",\"Bus\",\"Motorcycle\",\"Vehicle\",\"Face\",\"License plate\",\"Object\"];\nvar confidence = flow.get(\"confidence\") || 0;\n\nif( Array.isArray(msg.payload) ) {\n    var list = [];\n    msg.payload.forEach( function(detection){\n        if( detection.active === false )\n            return;\n\n        var ignoreClass = true;\n        classFilter.forEach(function(element) {\n            if( element === detection.class)\n                ignoreClass = false;\n        });\n        if(ignoreClass)\n            return;\n        //Filter confidence\n        if( detection.confidence < confidence )\n            return;\n        list.push(detection);\n    });\n    if(list.length == 0)\n        return;\n    msg.payload = list;\n    return msg;\n}\n\nif( msg.payload.distance < 20 )\n    return 0;\n\n//Filter unwanted class types\nvar ignoreClass = true;\nclassFilter.forEach(function(element) {\n    if( element === msg.payload.class)\n        ignoreClass = false;\n});\nif(ignoreClass)\n    return;\n\n//Filter confidence\nif( msg.payload.confidence < confidence )\n    return;\n\n//Object passed all filters\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "04355ba9e143d9d4"
            ]
        ]
    },
    {
        "id": "b03c6fadd2812341",
        "type": "change",
        "z": "74ed6882c1309930",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "611e87ef5171ee88",
        "type": "inject",
        "z": "74ed6882c1309930",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "d6ba479528e9ac8b",
                "ee28010f5f1bc6bf",
                "dcec6ed674d89f67",
                "f203815f1cf4e0ba"
            ]
        ]
    },
    {
        "id": "152974deb25c3e2a",
        "type": "catch",
        "z": "74ed6882c1309930",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 200,
        "y": 40,
        "wires": [
            [
                "d0cd5c8269f55b27"
            ]
        ]
    },
    {
        "id": "d0cd5c8269f55b27",
        "type": "ui_toast",
        "z": "74ed6882c1309930",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 430,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "04355ba9e143d9d4",
        "type": "ui_template",
        "z": "74ed6882c1309930",
        "group": "0d7b022bf27a54b7",
        "name": "Video player",
        "order": 6,
        "width": "16",
        "height": "16",
        "format": "<script src=\"/js/media-stream-player.min.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <div id=\"{{'video_'+$id}}\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></div>\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar trackers = {};\nvar selectArea = null;\nvar aoi = null;\nvar playing = null;\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"video\":\n            setupVideo(scope,msg.payload);\n            trackers = {};\n            playing = true;\n            break;\n\n        case \"detections\":\n            if(!playing)\n                return;\n            drawDetections(msg.payload);\n            break;\n\n        case \"tracker\":\n            if(!playing)\n                return;\n            drawTracker(msg.payload);\n            break;\n\n        case \"path\":\n            if(!playing)\n                return;\n            drawPath(msg.payload);\n            break;\n\t\t}\n    });\n})(scope);\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n}\n\nfunction setupVideo( scope, data ) {\n    var rotation = data.rotation;\n    var aspect = data.aspect;\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n    videoWidth = 1280; \n    videoHeight = 720;\n\n    ClearCanvas();\n    \n    if(aspect === \"1:1\") {\n        imageHeight = 800;\n        videoWidth = 800;\n        videoHeight = 800;\n    }\n\n    if(aspect === \"4:3\") {\n        imageHeight = 600;\n        videoWidth = 800;\n        videoHeight = 600;\n    }\n\n    //Setup rotation\n    if(rotation === \"Portrait\" ) {\n        var temp = imageWidth;\n        imageWidth = imageHeight;\n        imageHeight = temp;\n    }\n\n    ctx = null;\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight + \"px\");\n\n    $(\"#video_\"+scope.$id).empty();\n    var player = '<media-stream-player hostname=\"'+window.location.hostname+'\" format=\"RTP_H264\" compression=\"40\" audio=\"0\" resolution=\"'+videoWidth+'x'+videoHeight+'\" variant=\"basic\" autoplay></media-stream-player>';\n    $(\"#video_\"+scope.$id).append(player);\n    \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawPath( data ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n    var first = data.path[0];\n    var last = data.path[data.path.length-1];\n\n    ctx.globalAlpha = strength;\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#00FF00';\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.moveTo(first.x, first.y );\n    ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    // ctx.fillText(data.class, first.x, first.y - 10 );\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.path[0].x, data.path[0].y );\n    for( var i = 1; i < data.path.length; i++ )\n        ctx.lineTo(data.path[i].x,data.path[i].y ); ctx.lineTo(last.x,last.y );\n    ctx.stroke(); ctx.beginPath();\n    ctx.lineWidth=3;\n    ctx.strokeStyle='#FF0000';\n    ctx.moveTo(last.x, last.y );\n    ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI); ctx.stroke();\n}\n\nfunction drawDetections( detections ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.strokeStyle = '#FFFF00';\n    detections.forEach( function(detection){\n        if( detection.hasOwnProperty(\"bx\")) {\n            ctx.moveTo(detection.bx,detection.by);\n            ctx.lineTo(detection.cx,detection.cy);\n        }\n        ctx.rect(detection.x, detection.y,detection.w,detection.h );\n        var text = detection.class || \"Undefined\";\n        if( detection.hasOwnProperty(\"confidence\"))\n            text += \" \" + detection.confidence;\n        if( detection.hasOwnProperty(\"age\") )\n            text += \" \" + detection.age + \"s\";\n        ctx.fillText(text, detection.x, detection.y-10 );\n    });\n    ctx.stroke();\n}\n\nfunction drawTracker( tracker ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#FFFF00';\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n\n    trackers[tracker.id] = tracker;\n    if( tracker.active === false )\n        delete trackers[tracker.id];\n    ctx.beginPath();\n    for(var id in trackers) {\n        if( trackers[id].hasOwnProperty(\"bx\")) {\n            ctx.moveTo(trackers[id].bx,trackers[id].by);\n            ctx.lineTo(trackers[id].cx,trackers[id].cy);\n        }\n        ctx.rect(trackers[id].x, trackers[id].y,trackers[id].w,trackers[id].h );\n        var text = trackers[id].class || \"Undefined\";\n        if( trackers[id].hasOwnProperty(\"confidence\"))\n            text += \" \" + trackers[id].confidence;\n        if( trackers[id].hasOwnProperty(\"age\"))\n              text += \" \" + trackers[id].age + \"s\";\n        ctx.fillText(text, trackers[id].x, trackers[id].y-10);\n    }\n    ctx.stroke();\n}\n\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "610ebc43f67cfd4b",
        "type": "ui_group",
        "name": "Settings",
        "tab": "b0934bc6da5a1654",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d7b022bf27a54b7",
        "type": "ui_group",
        "name": "Video",
        "tab": "b0934bc6da5a1654",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b0934bc6da5a1654",
        "type": "ui_tab",
        "name": "Objects",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]